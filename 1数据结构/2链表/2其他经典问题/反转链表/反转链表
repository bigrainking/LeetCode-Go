









# 反转链表方法：

## 方法一：迭代反转链表

- p = head.Next

- 不断将 p.Next到最前面

   如下面的 23节点是head节点，不断将 23.Next移动到最前

   - 实现时使用dummy节点更简单的实现

<img src="pic/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.assets/image-20220403143340822.png" alt="image-20220403143340822" style="zoom: 33%;" />



```go
func reverseList(head *ListNode) *ListNode {
    // 反复移动节点法
    if head == nil {
        return head
    }
    dummy := &ListNode{0, head} // 虚拟节点，指向head
    // p := head //记住
    for head.Next != nil {
        p := head.Next
        head.Next = head.Next.Next //删除p节点
        p.Next = dummy.Next //将p节点插入到最前面
        dummy.Next = p
    }
    return dummy.Next
}
```

